version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: aido-postgres
    environment:
      POSTGRES_USER: aido
      POSTGRES_PASSWORD: aido
      POSTGRES_DB: aido_lab
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aido -d aido_lab"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aido-network

  # Redis
  redis:
    image: redis:7-alpine
    container_name: aido-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aido-network

  # Backend
  backend:
    build:
      context: .        # build from backend directory
      dockerfile: Dockerfile
    image: aido-backend:latest
    container_name: aido-backend
    env_file:
      - ./.env          # put DATABASE_URL etc. here
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - WORKSPACE_BASE=/app/workspaces
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./workspaces:/app/workspaces
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aido-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    image: aido-frontend:latest
    container_name: aido-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_WS_URL=ws://backend:8000
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    networks:
      - aido-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  workspaces:

networks:
  aido-network:
    driver: bridge
